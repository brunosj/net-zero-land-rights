/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    homepage: Homepage;
    about: About;
    'chapters-page': ChaptersPage;
    resources: Resource;
    contact: Contact;
    newsletter: Newsletter;
    pages: Page;
    chapters: Chapter;
    'key-messages': KeyMessage;
    'media-items': MediaItem;
    'media-center': MediaCenter;
    'contact-submissions': ContactSubmission;
    media: Media;
    users: User;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    homepage: HomepageSelect<false> | HomepageSelect<true>;
    about: AboutSelect<false> | AboutSelect<true>;
    'chapters-page': ChaptersPageSelect<false> | ChaptersPageSelect<true>;
    resources: ResourcesSelect<false> | ResourcesSelect<true>;
    contact: ContactSelect<false> | ContactSelect<true>;
    newsletter: NewsletterSelect<false> | NewsletterSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    chapters: ChaptersSelect<false> | ChaptersSelect<true>;
    'key-messages': KeyMessagesSelect<false> | KeyMessagesSelect<true>;
    'media-items': MediaItemsSelect<false> | MediaItemsSelect<true>;
    'media-center': MediaCenterSelect<false> | MediaCenterSelect<true>;
    'contact-submissions': ContactSubmissionsSelect<false> | ContactSubmissionsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
    publication: Publication;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    publication: PublicationSelect<false> | PublicationSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: string;
  title: string;
  heroSection: {
    heroTitle: string;
    heroSubtitle: string;
  };
  aboutSection: {
    aboutTitle: string;
    aboutContent: string;
    /**
     * The publication is automatically linked from the "Publication" Global in Sidebar
     */
    publicationDownloadTitle: string;
    pressReleaseDownloadTitle?: string | null;
    /**
     * Either add a link to a page or upload/reference a document
     */
    pressReleaseLink: {
      type?: ('Page' | 'Document') | null;
      buttonText: string;
      link?: {
        type?: ('reference' | 'custom') | null;
        newTab?: boolean | null;
        reference?:
          | ({
              relationTo: 'homepage';
              value: string | Homepage;
            } | null)
          | ({
              relationTo: 'about';
              value: string | About;
            } | null)
          | ({
              relationTo: 'contact';
              value: string | Contact;
            } | null)
          | ({
              relationTo: 'chapters-page';
              value: string | ChaptersPage;
            } | null)
          | ({
              relationTo: 'pages';
              value: string | Page;
            } | null)
          | ({
              relationTo: 'resources';
              value: string | Resource;
            } | null)
          | ({
              relationTo: 'media-center';
              value: string | MediaCenter;
            } | null)
          | ({
              relationTo: 'newsletter';
              value: string | Newsletter;
            } | null)
          | ({
              relationTo: 'chapters';
              value: string | Chapter;
            } | null)
          | ({
              relationTo: 'media-items';
              value: string | MediaItem;
            } | null);
        url?: string | null;
      };
      pressReleaseDownload?: (string | null) | Media;
    };
  };
  keyMessagesSection: {
    keyMessagesHeading: string;
    keyMessages?: (string | KeyMessage)[] | null;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about".
 */
export interface About {
  id: string;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  authors?:
    | {
        name: string;
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        address?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        url?: string | null;
        logo?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  caption?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact".
 */
export interface Contact {
  id: string;
  title: string;
  callToActionText?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  mainColor:
    | 'red'
    | 'red-50'
    | 'red-20'
    | 'yellow'
    | 'yellow-light'
    | 'blue'
    | 'dark-blue'
    | 'light-blue'
    | 'petrol'
    | 'petrol-15'
    | 'dark-green'
    | 'light-green'
    | 'blue-green'
    | 'ochre'
    | 'ochre-15'
    | 'white'
    | 'black';
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "chapters-page".
 */
export interface ChaptersPage {
  id: string;
  title: string;
  heroSection: {
    heroTitle: string;
    heroSubtitle: string;
    heroContent: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  mainColor:
    | 'red'
    | 'red-50'
    | 'red-20'
    | 'yellow'
    | 'yellow-light'
    | 'blue'
    | 'dark-blue'
    | 'light-blue'
    | 'petrol'
    | 'petrol-15'
    | 'dark-green'
    | 'light-green'
    | 'blue-green'
    | 'ochre'
    | 'ochre-15'
    | 'white'
    | 'black';
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resources".
 */
export interface Resource {
  id: string;
  title: string;
  heroText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  publicationDownloadButtonText?: string | null;
  additionalResources?:
    | {
        title: string;
        /**
         * Link this resource to a specific chapter (optional)
         */
        chapter?: (string | null) | Chapter;
        resourceType: 'webPage' | 'publication' | 'video';
        description?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        /**
         * Thumbnail for the video (landscape aspect ratio 16:9)
         */
        thumbnail?: (string | null) | Media;
        /**
         * URL to the web page or video
         */
        link?: string | null;
        /**
         * Authors of the publication
         */
        authors?: string | null;
        /**
         * URL to the publication (preferred over file upload)
         */
        publicationUrl?: string | null;
        /**
         * Upload the publication file (optional if URL is provided)
         */
        file?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  showAllFigures?: boolean | null;
  selectedChapters?: (string | Chapter)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "chapters".
 */
export interface Chapter {
  id: string;
  title: string;
  authors?:
    | {
        name: string;
        organization: string;
        link?: string | null;
        id?: string | null;
      }[]
    | null;
  keyMessage?: (string | null) | KeyMessage;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  chapterNumber: number;
  mainColor:
    | 'red'
    | 'red-50'
    | 'red-20'
    | 'yellow'
    | 'yellow-light'
    | 'blue'
    | 'dark-blue'
    | 'light-blue'
    | 'petrol'
    | 'petrol-15'
    | 'dark-green'
    | 'light-green'
    | 'blue-green'
    | 'ochre'
    | 'ochre-15'
    | 'white'
    | 'black';
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "key-messages".
 */
export interface KeyMessage {
  id: string;
  /**
   * Please add the chapter number
   */
  title?: string | null;
  message: string;
  link?: {
    reference?: {
      relationTo: 'chapters';
      value: string | Chapter;
    } | null;
  };
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media-center".
 */
export interface MediaCenter {
  id: string;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  contactPerson?:
    | {
        name?: string | null;
        email?: string | null;
        image?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter".
 */
export interface Newsletter {
  id: string;
  title: string;
  callToActionText?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  checkboxText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  mainColor:
    | 'red'
    | 'red-50'
    | 'red-20'
    | 'yellow'
    | 'yellow-light'
    | 'blue'
    | 'dark-blue'
    | 'light-blue'
    | 'petrol'
    | 'petrol-15'
    | 'dark-green'
    | 'light-green'
    | 'blue-green'
    | 'ochre'
    | 'ochre-15'
    | 'white'
    | 'black';
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media-items".
 */
export interface MediaItem {
  id: string;
  title: string;
  releaseDate: string;
  type: 'Press Release' | 'News Article' | 'Blog Post' | 'Report';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Contact form submissions from the website
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions".
 */
export interface ContactSubmission {
  id: string;
  name: string;
  email: string;
  phone?: string | null;
  message: string;
  /**
   * Indicates if notification email was sent successfully
   */
  emailSent?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'homepage';
        value: string | Homepage;
      } | null)
    | ({
        relationTo: 'about';
        value: string | About;
      } | null)
    | ({
        relationTo: 'chapters-page';
        value: string | ChaptersPage;
      } | null)
    | ({
        relationTo: 'resources';
        value: string | Resource;
      } | null)
    | ({
        relationTo: 'contact';
        value: string | Contact;
      } | null)
    | ({
        relationTo: 'newsletter';
        value: string | Newsletter;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'chapters';
        value: string | Chapter;
      } | null)
    | ({
        relationTo: 'key-messages';
        value: string | KeyMessage;
      } | null)
    | ({
        relationTo: 'media-items';
        value: string | MediaItem;
      } | null)
    | ({
        relationTo: 'media-center';
        value: string | MediaCenter;
      } | null)
    | ({
        relationTo: 'contact-submissions';
        value: string | ContactSubmission;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage_select".
 */
export interface HomepageSelect<T extends boolean = true> {
  title?: T;
  heroSection?:
    | T
    | {
        heroTitle?: T;
        heroSubtitle?: T;
      };
  aboutSection?:
    | T
    | {
        aboutTitle?: T;
        aboutContent?: T;
        publicationDownloadTitle?: T;
        pressReleaseDownloadTitle?: T;
        pressReleaseLink?:
          | T
          | {
              type?: T;
              buttonText?: T;
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                  };
              pressReleaseDownload?: T;
            };
      };
  keyMessagesSection?:
    | T
    | {
        keyMessagesHeading?: T;
        keyMessages?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about_select".
 */
export interface AboutSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  authors?:
    | T
    | {
        name?: T;
        content?: T;
        address?: T;
        url?: T;
        logo?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "chapters-page_select".
 */
export interface ChaptersPageSelect<T extends boolean = true> {
  title?: T;
  heroSection?:
    | T
    | {
        heroTitle?: T;
        heroSubtitle?: T;
        heroContent?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resources_select".
 */
export interface ResourcesSelect<T extends boolean = true> {
  title?: T;
  heroText?: T;
  publicationDownloadButtonText?: T;
  additionalResources?:
    | T
    | {
        title?: T;
        chapter?: T;
        resourceType?: T;
        description?: T;
        thumbnail?: T;
        link?: T;
        authors?: T;
        publicationUrl?: T;
        file?: T;
        id?: T;
      };
  showAllFigures?: T;
  selectedChapters?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact_select".
 */
export interface ContactSelect<T extends boolean = true> {
  title?: T;
  callToActionText?: T;
  content?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  mainColor?: T;
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter_select".
 */
export interface NewsletterSelect<T extends boolean = true> {
  title?: T;
  callToActionText?: T;
  content?: T;
  checkboxText?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  mainColor?: T;
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  mainColor?: T;
  content?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "chapters_select".
 */
export interface ChaptersSelect<T extends boolean = true> {
  title?: T;
  authors?:
    | T
    | {
        name?: T;
        organization?: T;
        link?: T;
        id?: T;
      };
  keyMessage?: T;
  heroImage?: T;
  content?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  chapterNumber?: T;
  mainColor?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "key-messages_select".
 */
export interface KeyMessagesSelect<T extends boolean = true> {
  title?: T;
  message?: T;
  link?:
    | T
    | {
        reference?: T;
      };
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media-items_select".
 */
export interface MediaItemsSelect<T extends boolean = true> {
  title?: T;
  releaseDate?: T;
  type?: T;
  content?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media-center_select".
 */
export interface MediaCenterSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  contactPerson?:
    | T
    | {
        name?: T;
        email?: T;
        image?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions_select".
 */
export interface ContactSubmissionsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  phone?: T;
  message?: T;
  emailSent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'homepage';
                value: string | Homepage;
              } | null)
            | ({
                relationTo: 'about';
                value: string | About;
              } | null)
            | ({
                relationTo: 'contact';
                value: string | Contact;
              } | null)
            | ({
                relationTo: 'chapters-page';
                value: string | ChaptersPage;
              } | null)
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'resources';
                value: string | Resource;
              } | null)
            | ({
                relationTo: 'media-center';
                value: string | MediaCenter;
              } | null)
            | ({
                relationTo: 'newsletter';
                value: string | Newsletter;
              } | null)
            | ({
                relationTo: 'chapters';
                value: string | Chapter;
              } | null)
            | ({
                relationTo: 'media-items';
                value: string | MediaItem;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  attribution?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'homepage';
                value: string | Homepage;
              } | null)
            | ({
                relationTo: 'about';
                value: string | About;
              } | null)
            | ({
                relationTo: 'contact';
                value: string | Contact;
              } | null)
            | ({
                relationTo: 'chapters-page';
                value: string | ChaptersPage;
              } | null)
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'resources';
                value: string | Resource;
              } | null)
            | ({
                relationTo: 'media-center';
                value: string | MediaCenter;
              } | null)
            | ({
                relationTo: 'newsletter';
                value: string | Newsletter;
              } | null)
            | ({
                relationTo: 'chapters';
                value: string | Chapter;
              } | null)
            | ({
                relationTo: 'media-items';
                value: string | MediaItem;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  legalLinks?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'homepage';
                value: string | Homepage;
              } | null)
            | ({
                relationTo: 'about';
                value: string | About;
              } | null)
            | ({
                relationTo: 'contact';
                value: string | Contact;
              } | null)
            | ({
                relationTo: 'chapters-page';
                value: string | ChaptersPage;
              } | null)
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'resources';
                value: string | Resource;
              } | null)
            | ({
                relationTo: 'media-center';
                value: string | MediaCenter;
              } | null)
            | ({
                relationTo: 'newsletter';
                value: string | Newsletter;
              } | null)
            | ({
                relationTo: 'chapters';
                value: string | Chapter;
              } | null)
            | ({
                relationTo: 'media-items';
                value: string | MediaItem;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  contactInfo?: {
    address?: string | null;
    email?: string | null;
  };
  newsletterSection?: {
    title?: string | null;
    description?: string | null;
    buttonText?: string | null;
  };
  socialLinks?:
    | {
        platform: 'twitter' | 'bluesky' | 'linkedin' | 'instagram';
        url: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publication".
 */
export interface Publication {
  id: string;
  title: string;
  thumbnail: string | Media;
  file: string | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  attribution?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  legalLinks?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  contactInfo?:
    | T
    | {
        address?: T;
        email?: T;
      };
  newsletterSection?:
    | T
    | {
        title?: T;
        description?: T;
        buttonText?: T;
      };
  socialLinks?:
    | T
    | {
        platform?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publication_select".
 */
export interface PublicationSelect<T extends boolean = true> {
  title?: T;
  thumbnail?: T;
  file?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FigureBlock".
 */
export interface FigureBlock {
  size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
  alignment?: ('left' | 'center' | 'right') | null;
  title: string;
  media: string | Media;
  source?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'figureBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
  alignment?: ('left' | 'center' | 'right') | null;
  /**
   * Select the type of banner to display
   */
  bannerType: 'download' | 'pressRelease' | 'newsletter';
  /**
   * Title for the banner
   */
  title: string;
  /**
   * Date of the press release
   */
  date?: string | null;
  /**
   * External link (for press release)
   */
  externalLink?: string | null;
  /**
   * Text to display on the button
   */
  buttonText: string;
  /**
   * Optional image to display in the banner
   */
  image?: (string | null) | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'bannerBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "QuoteBlock".
 */
export interface QuoteBlock {
  size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
  alignment?: ('left' | 'center' | 'right') | null;
  /**
   * Add quote text content
   */
  richText: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'quote';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextBoxBlock".
 */
export interface TextBoxBlock {
  size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
  backgroundColor:
    | 'red'
    | 'red-50'
    | 'red-20'
    | 'yellow'
    | 'yellow-light'
    | 'blue'
    | 'dark-blue'
    | 'light-blue'
    | 'petrol'
    | 'petrol-15'
    | 'dark-green'
    | 'light-green'
    | 'blue-green'
    | 'ochre'
    | 'ochre-15'
    | 'white'
    | 'black';
  layout?: ('single' | 'two-columns') | null;
  leftColumn?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  rightColumn?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'textBox';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}